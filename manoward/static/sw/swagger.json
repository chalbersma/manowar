{
  "openapi": "3.0.0",
  "info": {
    "title": "Manowar 2.x API",
    "description": "Manowar 2 API. Designed to be a progrmattic way to interact with the data\ncollected and analyzed by Jellyfish 2.\n",
    "version": "2.6"
  },
  "servers": [
    {
      "url": "/manowar/v2"
    }
  ],
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ],
  "paths": {
    "/sapi/listusers/": {
      "get": {
        "description": "Designed to grab a list of hosts that either pass or fail an audit\nalong with the relevant data about each host. Similar to the audit_table\nitem from the old api.\n",
        "tags": [
          "auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "apiuid",
            "in": "query",
            "description": "API User Ids\n",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "apiusername",
            "in": "query",
            "description": "The username associated with the Username. Regex (Unless Exact used)\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "apiuser_purpose",
            "in": "query",
            "description": "The API Purpose of the Usernames. Regex (Unless Exact)\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ]
      }
    },
    "/collected/": {
      "get": {
        "description": "Root for the collected endpoint. Describes it's child for data discovery.\n",
        "tags": [
          "collections"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auditresults/{audit_id}/{request_timestamp}/": {
      "get": {
        "description": "Designed to grab a list of hosts that either pass or fail an audit\nalong with the relevant data about each host. Similar to the auditresults\nendpoint, except that this one also takes a timestamp so that it can\nreturn the results as it appears at a particular time.\n",
        "tags": [
          "audits"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "audit_id",
            "in": "path",
            "description": "The id of the audit you wish to get hosts back for. Needs to be speicied here or\nin the query string. This parameter is not technically required.\n",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "request_timestamp",
            "in": "path",
            "description": "A Unix Timestamp that you want to check for the date against.\nMust be a positive integer. This variable is required. If you\nwish to get the \"latest\" you shoul utilize the /auditresults\nendpoint.\n",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "bucket",
            "in": "query",
            "description": "A regex to match for the bucket. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the audits_by_host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "auditResult",
            "in": "query",
            "description": "A regex to match for the Audit Result (pass/fail). [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the audit_result column in the audit_by_host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "pass",
                "fail",
                "notafflicted"
              ]
            }
          },
          {
            "name": "auditResultText",
            "in": "query",
            "description": "A regex to match for the Audit Result Text. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the audit_result_text column in the audit_by_host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hostname",
            "in": "query",
            "description": "A regex to match for the hostname. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the hostname column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "A regex to match for the status. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pop",
            "in": "query",
            "description": "A regex to match for the pop. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "srvtype",
            "in": "query",
            "description": "A regex to match for the srvtype. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource",
            "in": "query",
            "description": "Matches the MOWN Resource either via Regex or Exactly (with exact). Keep in mind resources include\nthe resource qualifier and resource subtype if applicable.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partition",
            "in": "query",
            "description": "Matches the MOWN Parition either via Regex or Exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service",
            "in": "query",
            "description": "Matches the MOWN Service either via Regex or Exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountid",
            "in": "query",
            "description": "Matches the MOWN Account ID either via Regex or Exactly\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mownbase",
            "in": "query",
            "description": "Matches the MOWN Base URI fully (with regex or Exactly). Does not include\na matching of arguments\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mownfull",
            "in": "query",
            "description": "Matches the MOWN full URI fully (with regex or Exactly). Includes a Matching of Arguments\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagged",
            "in": "query",
            "description": "Matches an individual tag. Returns true if the tag is defined (even if the tag is set to something\nlike false). Specify using JQ style formatting. Uses the [JSON_EXISTS](https://mariadb.com/kb/en/json_exists/)\nfunctionality to do the JSON mapping. So **if you're looking for tag `loveit` you'd want to speicfy `$.loveit`**.\n",
            "required": false,
            "schema": {
              "type": "string"
            },
            "format": "jsonpath",
            "pattern": "^\\$\\."
          },
          {
            "name": "taggedtrue",
            "in": "query",
            "description": "Matches an individual tag. Returns true if the tag is defined as true Uses the \n[JSON_EXTRACT](https://mariadb.com/kb/en/json_extract/)\nfunctionality to do the JSON mapping. So **if you're looking for tag `loveit` you'd want to speicfy `$.loveit`**.\nWill match against [true](https://mariadb.com/kb/en/true-false/), a builtin boolean. So if you specify something\nlike `{\"loveit\" : \"false\"}` (Note the String not boolean) it will return true and if you have something like\n`{\"zerosareawesome\" : 0}` it should return false.\n",
            "required": false,
            "schema": {
              "type": "string"
            },
            "format": "jsonpath",
            "pattern": "^\\$\\.\""
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Controls your other filters and flips them from regex matches (default) to exact matches\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                true,
                false
              ]
            }
          }
        ]
      }
    },
    "/root/": {
      "x-cached-length": "Every Midnight",
      "get": {
        "description": "Get Information about All Jellyfish2 Endpoints\n",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/sapi/puthostjson/": {
      "post": {
        "description": "Accepts a valid host json and stores it in the api. This call is fenced\nby an api token that you need to specify and won't work in the interactive\nversion of this.\n",
        "tags": [
          "sapi"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized (Most likely no Token given)"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "required": true,
              "schema": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/auditinfo/{audit_id}/buckets/": {
      "get": {
        "description": "Get's the bucket information for a particular audit. Does not retrieve\nThe data from the database because of limitations. Instead retrieves it\nfrom \"on disk.\" This means that what is returned here may not be as\naccurate as it could be.\n",
        "depreciated": true,
        "tags": [
          "audits"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "audit_id",
            "in": "path",
            "description": "The id of the audit's buckets you desire. You need to either specify it in path or optionally\nin the query string.\n",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ]
      }
    },
    "/collated/{collatedType}/": {
      "get": {
        "description": "Returns data that get's collated in the collate module. Can get results deliminated by audit for audits\n( yes you can get audits by audit ), pops & srvtypes.\n",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "audits"
        ],
        "parameters": [
          {
            "name": "collatedType",
            "in": "path",
            "description": "The type of collated value that you wish to see. Initially can only be pop,\nsrvtype or acoll (For audit). In the future may include more collations if\nadditional collations are added.\n",
            "schema": {
              "type": "string",
              "enum": [
                "pop",
                "srvtype",
                "acoll"
              ]
            },
            "required": true
          },
          {
            "name": "typefilter",
            "in": "query",
            "description": "A regex to match for the collated type (pop, srvtype or audit). [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the $collatedType column of the table in question. Should be encased in\nparenthesis as it's evaluated by [ast.literal_eval](https://docs.python.org/3.6/library/ast.html) on the backend as\npart of it's sanitization.\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "auditID",
            "in": "query",
            "description": "An audit ID to check against. Will filter results to just the auditID that you're interested in. For example, specifying\n7 with a collatedType of \"pop\" will lead to all of the pops returning their pass/fail/exempt amounts for auditID #7.\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ]
      }
    },
    "/auditinfo/{audit_id}/": {
      "get": {
        "description": "Get's the stored information about a given audit. Does not include the Bucket or Match Logic\nas there is currently a bug about those items.\n",
        "tags": [
          "audits"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "audit_id",
            "in": "path",
            "description": "The id of the audit you wish to see. You need to either specify it in path or optionally\nin the query string. This parameter is not technically required. There is not good way to document\nthis in swagger.\n",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/custdashboard/list/": {
      "x-cached-length": "Every Midnight",
      "get": {
        "description": "Produces a list of custom dashboards available to query.\n",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "dashboard"
        ],
        "parameters": [
          {
            "name": "dash_id",
            "in": "query",
            "description": "The Dashbaord identifier you would like to reference. Can be either\nthe dashboard short name (does regex search) or the dashboard id number\n(does exact match).\n",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "dash_name",
            "in": "query",
            "description": "Searches a Regex for the Dashboard Name you're looking for.\n",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Controls your other filters and flips them from regex matches (default) to exact matches\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                true,
                false
              ]
            }
          }
        ]
      }
    },
    "/cve/canoncial_check/{cve_name}/": {
      "x-cached-length": "Every Midnight",
      "get": {
        "depreciated": true,
        "description": "Gives you a check against a particular cve for the population you specify\nin the arguments. Accepts the non collection paramaters (as this utilizes\nthe collection paramaters) to make the check.\n",
        "tags": [
          "cve"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "cve_name",
            "in": "path",
            "description": "The CVE you wish to recieve data against\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "hostname",
            "in": "query",
            "description": "The regex the hostname you wish to get data for.\n",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Boolean use exact matches instead of regex\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "pop",
            "in": "query",
            "description": "Pop you wish to search for, respects exact\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "srvtype",
            "in": "query",
            "description": "Srvtype you wish to search for, respects exact\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "hoststatus",
            "in": "query",
            "description": "Hoststatus you wish to search for, respects exact\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "Overrides hoststatus.\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ]
      }
    },
    "/collected/values/{ctype}": {
      "x-cached-length": "Every Midnight",
      "get": {
        "description": "Grabs information on host collections as it exists on the edge (according\nto our latest collected data). This query can be intensive so it is cached\ndaily.\n",
        "tags": [
          "collections"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "ctype",
            "in": "path",
            "description": "The Collection Type you wish to match against. Must be equal to this item.\nYou can get a list of collection types from the `/collection/type/` endpoint.\nCan be overrriden by query string parameter.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "hostname",
            "in": "query",
            "description": "A regex to match for the hostname. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the hostname column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "A regex to match for the status. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pop",
            "in": "query",
            "description": "A regex to match for the pop. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "srvtype",
            "in": "query",
            "description": "A regex to match for the srvtype. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource",
            "in": "query",
            "description": "Matches the MOWN Resource either via Regex or Exactly (with exact). Keep in mind resources include\nthe resource qualifier and resource subtype if applicable.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partition",
            "in": "query",
            "description": "Matches the MOWN Parition either via Regex or Exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service",
            "in": "query",
            "description": "Matches the MOWN Service either via Regex or Exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountid",
            "in": "query",
            "description": "Matches the MOWN Account ID either via Regex or Exactly\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mownbase",
            "in": "query",
            "description": "Matches the MOWN Base URI fully (with regex or Exactly). Does not include\na matching of arguments\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mownfull",
            "in": "query",
            "description": "Matches the MOWN full URI fully (with regex or Exactly). Includes a Matching of Arguments\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagged",
            "in": "query",
            "description": "Matches an individual tag. Returns true if the tag is defined (even if the tag is set to something\nlike false). Specify using JQ style formatting. Uses the [JSON_EXISTS](https://mariadb.com/kb/en/json_exists/)\nfunctionality to do the JSON mapping. So **if you're looking for tag `loveit` you'd want to speicfy `$.loveit`**.\n",
            "required": false,
            "schema": {
              "type": "string"
            },
            "format": "jsonpath",
            "pattern": "^\\$\\."
          },
          {
            "name": "taggedtrue",
            "in": "query",
            "description": "Matches an individual tag. Returns true if the tag is defined as true Uses the \n[JSON_EXTRACT](https://mariadb.com/kb/en/json_extract/)\nfunctionality to do the JSON mapping. So **if you're looking for tag `loveit` you'd want to speicfy `$.loveit`**.\nWill match against [true](https://mariadb.com/kb/en/true-false/), a builtin boolean. So if you specify something\nlike `{\"loveit\" : \"false\"}` (Note the String not boolean) it will return true and if you have something like\n`{\"zerosareawesome\" : 0}` it should return false.\n",
            "required": false,
            "schema": {
              "type": "string"
            },
            "format": "jsonpath",
            "pattern": "^\\$\\.\""
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Controls your other filters and flips them from regex matches (default) to exact matches\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                true,
                false
              ]
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "Value of the collection You wish to search for. Regex by Default\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "csubtype",
            "in": "query",
            "description": "Value of the collection  subtype You wish to search for. Regex by Default\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/sapi/extendpopulationjson/": {
      "get": {
        "description": "Allows you to \"extend\" a host or population of hosts with new data. Gives a generic way\nto insert new collections for an existing host.\n",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized (Most likely no Token given)"
          }
        },
        "tags": [
          "sapi"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "required": true,
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "host_id",
            "in": "path",
            "description": "The id of a specific host you'd like to use. If this is specified the hostname & collection type arguments\nthat can be used to specify a population are ignored.\n",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "ctype",
            "in": "query",
            "description": "A regex to match for the collection_type. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the collection_type column in the collection table.\nOnly hosts with one or more results of this collection type will be returned.\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "ictype",
            "in": "query",
            "description": "The name of the collection type you'd like to record. \"Inserted\" collection type.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "icsubtype",
            "in": "query",
            "description": "The name of the collection subtype type you'd like to record. \"Inserted\" collection subtype.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "ivalue",
            "in": "query",
            "description": "The value you'd like to record. \"Inserted\" value.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Controls your other filters and flips them from regex matches (default) to exact matches\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                true,
                false
              ]
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "Value of the collection You wish to search for. Regex by Default\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "csubtype",
            "in": "query",
            "description": "Value of the collection  subtype You wish to search for. Regex by Default\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hostname",
            "in": "query",
            "description": "A regex to match for the hostname. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the hostname column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "A regex to match for the status. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pop",
            "in": "query",
            "description": "A regex to match for the pop. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "srvtype",
            "in": "query",
            "description": "A regex to match for the srvtype. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource",
            "in": "query",
            "description": "Matches the MOWN Resource either via Regex or Exactly (with exact). Keep in mind resources include\nthe resource qualifier and resource subtype if applicable.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partition",
            "in": "query",
            "description": "Matches the MOWN Parition either via Regex or Exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service",
            "in": "query",
            "description": "Matches the MOWN Service either via Regex or Exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountid",
            "in": "query",
            "description": "Matches the MOWN Account ID either via Regex or Exactly\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mownbase",
            "in": "query",
            "description": "Matches the MOWN Base URI fully (with regex or Exactly). Does not include\na matching of arguments\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mownfull",
            "in": "query",
            "description": "Matches the MOWN full URI fully (with regex or Exactly). Includes a Matching of Arguments\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagged",
            "in": "query",
            "description": "Matches an individual tag. Returns true if the tag is defined (even if the tag is set to something\nlike false). Specify using JQ style formatting. Uses the [JSON_EXISTS](https://mariadb.com/kb/en/json_exists/)\nfunctionality to do the JSON mapping. So **if you're looking for tag `loveit` you'd want to speicfy `$.loveit`**.\n",
            "required": false,
            "schema": {
              "type": "string"
            },
            "format": "jsonpath",
            "pattern": "^\\$\\."
          },
          {
            "name": "taggedtrue",
            "in": "query",
            "description": "Matches an individual tag. Returns true if the tag is defined as true Uses the \n[JSON_EXTRACT](https://mariadb.com/kb/en/json_extract/)\nfunctionality to do the JSON mapping. So **if you're looking for tag `loveit` you'd want to speicfy `$.loveit`**.\nWill match against [true](https://mariadb.com/kb/en/true-false/), a builtin boolean. So if you specify something\nlike `{\"loveit\" : \"false\"}` (Note the String not boolean) it will return true and if you have something like\n`{\"zerosareawesome\" : 0}` it should return false.\n",
            "required": false,
            "schema": {
              "type": "string"
            },
            "format": "jsonpath",
            "pattern": "^\\$\\.\""
          }
        ]
      }
    },
    "/soc/vipporttohost/": {
      "x-cached-length": "Every Midnight",
      "get": {
        "description": "Grabs a list of hosts that are beind the given vip with the proper\nport/protocol open. This is a rather specific endpoint for a particular cause.\nGiven a VIP and a port/protocol that something was seen on. This will show\nyou all the hosts associated with that vip that have that same port/protocol\n",
        "tags": [
          "liveaudit"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "vip",
            "in": "query",
            "description": "The VIP that you wish to search hosts against.\n",
            "required": true,
            "schema": {
              "type": "string"
            },
            "format": "ipv46"
          },
          {
            "name": "port",
            "in": "query",
            "description": "The port number that you wish to search against.\n",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "default": 443
          },
          {
            "name": "protocol",
            "schema": {
              "type": "string",
              "enum": [
                "udp",
                "tcp"
              ]
            },
            "in": "query",
            "description": "This is a string that will accept `tcp` or `udp` (default is tcp)\nand use it in conjunction with the ports.\n",
            "required": false,
            "default": "tcp"
          },
          {
            "name": "ipv",
            "in": "query",
            "description": "By default this will be `4` (as in ipv4). But you can set it to\n`6` which will allow you to look for ipv6 ports and protocols on\nipv6 vips.\n",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "default": 4
          }
        ]
      }
    },
    "/addtoken/": {
      "x-cached-length": "Every Midnight",
      "get": {
        "description": "Adds a new token for a particular user.\n",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "auth"
        ],
        "parameters": [
          {
            "name": "apiuid",
            "in": "query",
            "description": "Username or UserID of user who should have token created.\n",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "validfor",
            "in": "query",
            "description": "How many days token should be valid for (default 7 days)\n",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "default": 7
          },
          {
            "name": "tokentype",
            "in": "query",
            "description": "What type of token to insert. Default is sapi.\n",
            "schema": {
              "type": "string",
              "enum": [
                "robot",
                "storage"
              ]
            },
            "required": true,
            "default": "storage"
          }
        ]
      }
    },
    "/auditresults/{audit_id}/": {
      "get": {
        "description": "Designed to grab a list of hosts that either pass or fail an audit\nalong with the relevant data about each host. Similar to the audit_table\nitem from the old api.\n",
        "tags": [
          "audits"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "audit_id",
            "in": "path",
            "description": "The id of the audit you wish to get hosts back for. Needs to be speicied here or\nin the query string. This parameter is not technically required.\n",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "bucket",
            "in": "query",
            "description": "A regex to match for the bucket. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the audits_by_host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "auditResult",
            "in": "query",
            "description": "A regex to match for the Audit Result (pass/fail). [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the audit_result column in the audit_by_host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "pass",
                "fail",
                "notafflicted"
              ]
            }
          },
          {
            "name": "auditResultText",
            "in": "query",
            "description": "A regex to match for the Audit Result Text. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the audit_result_text column in the audit_by_host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hostname",
            "in": "query",
            "description": "A regex to match for the hostname. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the hostname column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "A regex to match for the status. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pop",
            "in": "query",
            "description": "A regex to match for the pop. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "srvtype",
            "in": "query",
            "description": "A regex to match for the srvtype. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource",
            "in": "query",
            "description": "Matches the MOWN Resource either via Regex or Exactly (with exact). Keep in mind resources include\nthe resource qualifier and resource subtype if applicable.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partition",
            "in": "query",
            "description": "Matches the MOWN Parition either via Regex or Exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service",
            "in": "query",
            "description": "Matches the MOWN Service either via Regex or Exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountid",
            "in": "query",
            "description": "Matches the MOWN Account ID either via Regex or Exactly\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mownbase",
            "in": "query",
            "description": "Matches the MOWN Base URI fully (with regex or Exactly). Does not include\na matching of arguments\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mownfull",
            "in": "query",
            "description": "Matches the MOWN full URI fully (with regex or Exactly). Includes a Matching of Arguments\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagged",
            "in": "query",
            "description": "Matches an individual tag. Returns true if the tag is defined (even if the tag is set to something\nlike false). Specify using JQ style formatting. Uses the [JSON_EXISTS](https://mariadb.com/kb/en/json_exists/)\nfunctionality to do the JSON mapping. So **if you're looking for tag `loveit` you'd want to speicfy `$.loveit`**.\n",
            "required": false,
            "schema": {
              "type": "string"
            },
            "format": "jsonpath",
            "pattern": "^\\$\\."
          },
          {
            "name": "taggedtrue",
            "in": "query",
            "description": "Matches an individual tag. Returns true if the tag is defined as true Uses the \n[JSON_EXTRACT](https://mariadb.com/kb/en/json_extract/)\nfunctionality to do the JSON mapping. So **if you're looking for tag `loveit` you'd want to speicfy `$.loveit`**.\nWill match against [true](https://mariadb.com/kb/en/true-false/), a builtin boolean. So if you specify something\nlike `{\"loveit\" : \"false\"}` (Note the String not boolean) it will return true and if you have something like\n`{\"zerosareawesome\" : 0}` it should return false.\n",
            "required": false,
            "schema": {
              "type": "string"
            },
            "format": "jsonpath",
            "pattern": "^\\$\\.\""
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Controls your other filters and flips them from regex matches (default) to exact matches\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                true,
                false
              ]
            }
          }
        ]
      }
    },
    "/collected/types/": {
      "x-cached-length": "Every Midnight",
      "get": {
        "description": "Grabs a list of types available in our collections. This is a slower query, so\nresults are cached once at midnight. If you query times out it will finish up\nthe query & caching on the server and then serve it to you next time you ask.\n",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "collections"
        ]
      }
    },
    "/custdashboard/create/": {
      "x-cached-length": "Every Midnight",
      "get": {
        "description": "Creates a New Custom Dashboard\n",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "dashboard"
        ],
        "parameters": [
          {
            "name": "dashboard_name",
            "in": "query",
            "description": "Username that wants to be created.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "dashboard_description",
            "in": "query",
            "description": "Accompying Description to go with this Dashboard\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ]
      }
    },
    "/hostsearch/": {
      "x-cached-length": "Every Midnight",
      "get": {
        "description": "Designed to grab the host(s) that match a particular hostname. Ideally\nto be used by the SAPI endpoint to extend host collections of a particular\nhost (by searching for it in Jellyfish, then extending the collections\nwith new data).\n",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "hosts"
        ],
        "parameters": [
          {
            "name": "ctype",
            "in": "query",
            "description": "A regex to match for the collection_type. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the hostname column in the collection table.\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Controls your other filters and flips them from regex matches (default) to exact matches\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                true,
                false
              ]
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "Value of the collection You wish to search for. Regex by Default\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "csubtype",
            "in": "query",
            "description": "Value of the collection  subtype You wish to search for. Regex by Default\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hostname",
            "in": "query",
            "description": "A regex to match for the hostname. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the hostname column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "A regex to match for the status. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pop",
            "in": "query",
            "description": "A regex to match for the pop. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "srvtype",
            "in": "query",
            "description": "A regex to match for the srvtype. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource",
            "in": "query",
            "description": "Matches the MOWN Resource either via Regex or Exactly (with exact). Keep in mind resources include\nthe resource qualifier and resource subtype if applicable.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partition",
            "in": "query",
            "description": "Matches the MOWN Parition either via Regex or Exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service",
            "in": "query",
            "description": "Matches the MOWN Service either via Regex or Exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountid",
            "in": "query",
            "description": "Matches the MOWN Account ID either via Regex or Exactly\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mownbase",
            "in": "query",
            "description": "Matches the MOWN Base URI fully (with regex or Exactly). Does not include\na matching of arguments\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mownfull",
            "in": "query",
            "description": "Matches the MOWN full URI fully (with regex or Exactly). Includes a Matching of Arguments\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagged",
            "in": "query",
            "description": "Matches an individual tag. Returns true if the tag is defined (even if the tag is set to something\nlike false). Specify using JQ style formatting. Uses the [JSON_EXISTS](https://mariadb.com/kb/en/json_exists/)\nfunctionality to do the JSON mapping. So **if you're looking for tag `loveit` you'd want to speicfy `$.loveit`**.\n",
            "required": false,
            "schema": {
              "type": "string"
            },
            "format": "jsonpath",
            "pattern": "^\\$\\."
          },
          {
            "name": "taggedtrue",
            "in": "query",
            "description": "Matches an individual tag. Returns true if the tag is defined as true Uses the \n[JSON_EXTRACT](https://mariadb.com/kb/en/json_extract/)\nfunctionality to do the JSON mapping. So **if you're looking for tag `loveit` you'd want to speicfy `$.loveit`**.\nWill match against [true](https://mariadb.com/kb/en/true-false/), a builtin boolean. So if you specify something\nlike `{\"loveit\" : \"false\"}` (Note the String not boolean) it will return true and if you have something like\n`{\"zerosareawesome\" : 0}` it should return false.\n",
            "required": false,
            "schema": {
              "type": "string"
            },
            "format": "jsonpath",
            "pattern": "^\\$\\.\""
          }
        ]
      }
    },
    "/auditresults/{audit_id}/range/{backdays}/": {
      "get": {
        "description": "Designed to grab a list of hosts that either pass or fail an audit\nalong with the relevant data about each host. Similar to the auditresults\nendpoint, except that this one also takes a timestamp so that it can\nreturn the results as it appears at a particular time.\n",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "audits"
        ],
        "parameters": [
          {
            "name": "audit_id",
            "in": "path",
            "description": "The id of the audit you wish to get hosts back for. Needs to be speicied here or\nin the query string. This parameter is not technically required.\n",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "backdays",
            "in": "path",
            "description": "How many days back to look. This will use the last Midnight time and go back from\nthere.\n",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "bucket",
            "in": "query",
            "description": "A regex to match for the bucket. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the audits_by_host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "auditResult",
            "in": "query",
            "description": "A regex to match for the Audit Result (pass/fail). [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the audit_result column in the audit_by_host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "pass",
                "fail",
                "notafflicted"
              ]
            }
          },
          {
            "name": "auditResultText",
            "in": "query",
            "description": "A regex to match for the Audit Result Text. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the audit_result_text column in the audit_by_host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hostname",
            "in": "query",
            "description": "A regex to match for the hostname. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the hostname column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "A regex to match for the status. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pop",
            "in": "query",
            "description": "A regex to match for the pop. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "srvtype",
            "in": "query",
            "description": "A regex to match for the srvtype. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource",
            "in": "query",
            "description": "Matches the MOWN Resource either via Regex or Exactly (with exact). Keep in mind resources include\nthe resource qualifier and resource subtype if applicable.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partition",
            "in": "query",
            "description": "Matches the MOWN Parition either via Regex or Exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service",
            "in": "query",
            "description": "Matches the MOWN Service either via Regex or Exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountid",
            "in": "query",
            "description": "Matches the MOWN Account ID either via Regex or Exactly\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mownbase",
            "in": "query",
            "description": "Matches the MOWN Base URI fully (with regex or Exactly). Does not include\na matching of arguments\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mownfull",
            "in": "query",
            "description": "Matches the MOWN full URI fully (with regex or Exactly). Includes a Matching of Arguments\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagged",
            "in": "query",
            "description": "Matches an individual tag. Returns true if the tag is defined (even if the tag is set to something\nlike false). Specify using JQ style formatting. Uses the [JSON_EXISTS](https://mariadb.com/kb/en/json_exists/)\nfunctionality to do the JSON mapping. So **if you're looking for tag `loveit` you'd want to speicfy `$.loveit`**.\n",
            "required": false,
            "schema": {
              "type": "string"
            },
            "format": "jsonpath",
            "pattern": "^\\$\\."
          },
          {
            "name": "taggedtrue",
            "in": "query",
            "description": "Matches an individual tag. Returns true if the tag is defined as true Uses the \n[JSON_EXTRACT](https://mariadb.com/kb/en/json_extract/)\nfunctionality to do the JSON mapping. So **if you're looking for tag `loveit` you'd want to speicfy `$.loveit`**.\nWill match against [true](https://mariadb.com/kb/en/true-false/), a builtin boolean. So if you specify something\nlike `{\"loveit\" : \"false\"}` (Note the String not boolean) it will return true and if you have something like\n`{\"zerosareawesome\" : 0}` it should return false.\n",
            "required": false,
            "schema": {
              "type": "string"
            },
            "format": "jsonpath",
            "pattern": "^\\$\\.\""
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Controls your other filters and flips them from regex matches (default) to exact matches\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                true,
                false
              ]
            }
          }
        ]
      }
    },
    "/dashboard/": {
      "x-cached-length": "Every Midnight",
      "get": {
        "description": "Get the Dashboard information about.\n",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "dashboard"
        ],
        "parameters": [
          {
            "name": "pass_audits",
            "in": "query",
            "description": "Specifying this variable means you only want the passing audits \n(audits with zero failures).\nNote that specifying this option simultaneously with fail_audits\nwill lead to a warning but will return all audits.\n",
            "schema": {
              "type": "string"
            },
            "enum": [
              true,
              false
            ]
          },
          {
            "name": "fail_audits",
            "in": "query",
            "description": "Specifying this variable means you only want the failing audits \n(audits with zero failures).\nNote that specifying this option simultaneously with pass_audits\nwill lead to a warning but will return all audits.\n",
            "schema": {
              "type": "string"
            },
            "enum": [
              true,
              false
            ]
          },
          {
            "name": "cust_dash_id",
            "in": "query",
            "description": "Only Return audits in this custom dashboard (referenced by ID).\n",
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/collected/subtypes_filtered/{ctype}/": {
      "get": {
        "description": "Grabs a list of subtypes associated with a particular type. As this query can be intesive,\nresults are cached once a midnight. Please be patient with this query.\n",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "collections"
        ],
        "parameters": [
          {
            "name": "ctype",
            "in": "path",
            "description": "The Collection Type you wish to match against. Must be equal to this item. You can get\na list of collection types from the `/collection/type` endpoint. Can be overridden with\nquery string paramter.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "usevalue",
            "schema": {
              "type": "string",
              "enum": [
                true,
                false
              ]
            },
            "in": "query",
            "description": "Setting this value to anything will tell the api endpoint to not just organize subtypes but\nto also organize unique values too.\n  \n"
          },
          {
            "name": "hostname",
            "in": "query",
            "description": "A regex to match for the hostname. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the hostname column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "A regex to match for the status. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pop",
            "in": "query",
            "description": "A regex to match for the pop. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "srvtype",
            "in": "query",
            "description": "A regex to match for the srvtype. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource",
            "in": "query",
            "description": "Matches the MOWN Resource either via Regex or Exactly (with exact). Keep in mind resources include\nthe resource qualifier and resource subtype if applicable.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partition",
            "in": "query",
            "description": "Matches the MOWN Parition either via Regex or Exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service",
            "in": "query",
            "description": "Matches the MOWN Service either via Regex or Exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountid",
            "in": "query",
            "description": "Matches the MOWN Account ID either via Regex or Exactly\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mownbase",
            "in": "query",
            "description": "Matches the MOWN Base URI fully (with regex or Exactly). Does not include\na matching of arguments\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mownfull",
            "in": "query",
            "description": "Matches the MOWN full URI fully (with regex or Exactly). Includes a Matching of Arguments\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagged",
            "in": "query",
            "description": "Matches an individual tag. Returns true if the tag is defined (even if the tag is set to something\nlike false). Specify using JQ style formatting. Uses the [JSON_EXISTS](https://mariadb.com/kb/en/json_exists/)\nfunctionality to do the JSON mapping. So **if you're looking for tag `loveit` you'd want to speicfy `$.loveit`**.\n",
            "required": false,
            "schema": {
              "type": "string"
            },
            "format": "jsonpath",
            "pattern": "^\\$\\."
          },
          {
            "name": "taggedtrue",
            "in": "query",
            "description": "Matches an individual tag. Returns true if the tag is defined as true Uses the \n[JSON_EXTRACT](https://mariadb.com/kb/en/json_extract/)\nfunctionality to do the JSON mapping. So **if you're looking for tag `loveit` you'd want to speicfy `$.loveit`**.\nWill match against [true](https://mariadb.com/kb/en/true-false/), a builtin boolean. So if you specify something\nlike `{\"loveit\" : \"false\"}` (Note the String not boolean) it will return true and if you have something like\n`{\"zerosareawesome\" : 0}` it should return false.\n",
            "required": false,
            "schema": {
              "type": "string"
            },
            "format": "jsonpath",
            "pattern": "^\\$\\.\""
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Controls your other filters and flips them from regex matches (default) to exact matches\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                true,
                false
              ]
            }
          }
        ]
      }
    },
    "/genericlargecompare/": {
      "x-cached-length": "Every Midnight",
      "get": {
        "depreciated": true,
        "description": "Generic Large Commparison against a particular hoststatus.\n",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "liveaudit"
        ],
        "parameters": [
          {
            "name": "hostname",
            "in": "query",
            "description": "The regex the hostname you wish to get data for.\n",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Boolean use exact matches instead of regex\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "pop",
            "in": "query",
            "description": "Pop you wish to search for, respects exact\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "srvtype",
            "in": "query",
            "description": "Srvtype you wish to search for, respects exact\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "hoststatus",
            "in": "query",
            "description": "Hoststatus you wish to search for, respects exact\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "Overrides hoststatus.\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "matchcollection_pop",
            "in": "query",
            "description": "Uses hoststatu's matchcollection feature to match a collection\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "matchcollection_ctype",
            "in": "query",
            "description": "Uses hostsearch ctype match\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "matchcollection_csubtype",
            "in": "query",
            "description": "Uses hostsearch csubtype match\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "matchcollection_cvalue",
            "in": "query",
            "description": "Uses hostsearch cvalue match\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "mtype",
            "in": "query",
            "description": "What type of match you should do. Can be any of the non subtype comparisons\nnoted in the docs.\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "ctype",
            "in": "query",
            "description": "What collection type of match you should do your match against. Put this\nin as an array or I'll get angry at ya.\n",
            "schema": {
              "type": "array"
            },
            "required": false
          },
          {
            "name": "csubtype",
            "in": "query",
            "description": "What collection sub type of match you should do your match against. Put this\nin as an array or I'll get angry at ya.\n",
            "schema": {
              "type": "array"
            },
            "required": false
          },
          {
            "name": "mvalue",
            "in": "query",
            "description": "What collection value shoudl I match against. THis is an array.\n",
            "schema": {
              "type": "array"
            },
            "required": false
          }
        ]
      }
    },
    "/custdashboard/modify/{dash_id}/": {
      "get": {
        "description": "Modifies a custom audit by either adding, removing or setting an audit_id\nor list of audit_ids\n",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "dashboard"
        ],
        "parameters": [
          {
            "name": "dash_id",
            "in": "path",
            "description": "Dashboard ID of the dashboard you wish to modify\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "modifyorder",
            "in": "query",
            "description": "A dict that tells the system what it should do. Contains one or two keys,\n\"add\" with an audit_id or list of audit_id's to be added and/or \"remove\"\nwith an audit_id or list of audit_ids to be removed. This is a parsed\nby ast.literal_eval.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ]
      }
    },
    "/hostcollections/{host_id}/": {
      "x-cached-length": "Every Midnight",
      "get": {
        "description": "Designed to grab the latest collections from the host. Grabs the fresh\nones as of yesterday Midnight. Only grabs one collection for each type/subtype\n",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "collections",
          "hosts"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "path",
            "description": "The id of the host you wish to get data for.\n",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "ctype",
            "in": "query",
            "description": "A regex to match for the collection_type. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the hostname column in the collection table.\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Controls your other filters and flips them from regex matches (default) to exact matches\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                true,
                false
              ]
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "Value of the collection You wish to search for. Regex by Default\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "csubtype",
            "in": "query",
            "description": "Value of the collection  subtype You wish to search for. Regex by Default\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/factorlist/": {
      "x-cached-length": "Every Midnight",
      "get": {
        "description": "Gives you all the pops that Jellyfish has recently seen.\n",
        "tags": [
          "audits"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "factor",
            "in": "query",
            "description": "The Factor to discriminate on. Must be a known & collated type\n",
            "schema": {
              "type": "string",
              "enum": [
                "pop",
                "srvtype"
              ]
            }
          },
          {
            "name": "hostname",
            "in": "query",
            "description": "A regex to match for the hostname. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the hostname column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "A regex to match for the status. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pop",
            "in": "query",
            "description": "A regex to match for the pop. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "srvtype",
            "in": "query",
            "description": "A regex to match for the srvtype. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource",
            "in": "query",
            "description": "Matches the MOWN Resource either via Regex or Exactly (with exact). Keep in mind resources include\nthe resource qualifier and resource subtype if applicable.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partition",
            "in": "query",
            "description": "Matches the MOWN Parition either via Regex or Exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service",
            "in": "query",
            "description": "Matches the MOWN Service either via Regex or Exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountid",
            "in": "query",
            "description": "Matches the MOWN Account ID either via Regex or Exactly\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mownbase",
            "in": "query",
            "description": "Matches the MOWN Base URI fully (with regex or Exactly). Does not include\na matching of arguments\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mownfull",
            "in": "query",
            "description": "Matches the MOWN full URI fully (with regex or Exactly). Includes a Matching of Arguments\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagged",
            "in": "query",
            "description": "Matches an individual tag. Returns true if the tag is defined (even if the tag is set to something\nlike false). Specify using JQ style formatting. Uses the [JSON_EXISTS](https://mariadb.com/kb/en/json_exists/)\nfunctionality to do the JSON mapping. So **if you're looking for tag `loveit` you'd want to speicfy `$.loveit`**.\n",
            "required": false,
            "schema": {
              "type": "string"
            },
            "format": "jsonpath",
            "pattern": "^\\$\\."
          },
          {
            "name": "taggedtrue",
            "in": "query",
            "description": "Matches an individual tag. Returns true if the tag is defined as true Uses the \n[JSON_EXTRACT](https://mariadb.com/kb/en/json_extract/)\nfunctionality to do the JSON mapping. So **if you're looking for tag `loveit` you'd want to speicfy `$.loveit`**.\nWill match against [true](https://mariadb.com/kb/en/true-false/), a builtin boolean. So if you specify something\nlike `{\"loveit\" : \"false\"}` (Note the String not boolean) it will return true and if you have something like\n`{\"zerosareawesome\" : 0}` it should return false.\n",
            "required": false,
            "schema": {
              "type": "string"
            },
            "format": "jsonpath",
            "pattern": "^\\$\\.\""
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Controls your other filters and flips them from regex matches (default) to exact matches\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                true,
                false
              ]
            }
          }
        ]
      }
    },
    "/collected/subtypes/{ctype}/": {
      "x-cached-length": "Every Midnight",
      "get": {
        "description": "Grabs a list of subtypes associated with a particular type. As this query can be intesive,\nresults are cached once a midnight. Please be patient with this query.\n",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "collections"
        ],
        "parameters": [
          {
            "name": "ctype",
            "in": "path",
            "description": "The Collection Type you wish to match against. Must be equal to this item. You can get\na list of collection types from the `/collection/type` endpoint. Can be overridden with\nquery string paramter.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/cve/ubuntu/{cve_name}/": {
      "get": {
        "description": "Gives you all the pops that Jellyfish has recently seen.\n",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "cve"
        ],
        "parameters": [
          {
            "name": "cve_name",
            "in": "path",
            "description": "The CVE you wish to recieve data against\n",
            "schema": {
              "type": "string"
            },
            "required": true,
            "format": "cve",
            "pattern": "^[Cc][Vv][Ee]-\\d{4}-\\d{4,9}$"
          }
        ]
      }
    },
    "/ip/report/": {
      "x-cached-length": "Every Midnight",
      "get": {
        "description": "Reports an ip/host intelligence for future querying. There's an undocumented\nfeature that allows you to post a series of ip addresses into this\n",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "IP"
        ],
        "parameters": [
          {
            "name": "ip",
            "in": "query",
            "description": "The ipv4 or ipv6 address that you wish to record a record against.\n",
            "schema": {
              "type": "string",
              "format": "ipv46"
            },
            "required": true
          },
          {
            "name": "iptype",
            "in": "query",
            "description": "Look for only one of the ips of this type. Must be vips4, vips6, host4,\nhost6, drac4, drac6, netdev4, netdev6 or unknown.\n",
            "schema": {
              "type": "string",
              "enum": [
                "vips4",
                "vips6",
                "host4",
                "host6",
                "drac4",
                "drac6",
                "netdev4",
                "netdev6",
                "unknown"
              ]
            },
            "required": true
          },
          {
            "name": "hostid",
            "in": "query",
            "description": "hostid to search for\n",
            "schema": {
              "type": "int"
            }
          }
        ]
      }
    },
    "/custdashboard/dashboard/{dash_id}/": {
      "x-cached-length": "Never",
      "get": {
        "description": "Produces a the Audits inside of a custom dashboard.\n",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "dashboard"
        ],
        "parameters": [
          {
            "name": "dash_id",
            "in": "path",
            "description": "The Dashbaord identifier you would like to reference. Can be either\nthe dashboard short name or the dashboard id number\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ]
      }
    },
    "/auditlist/": {
      "get": {
        "description": "Get the Dashboard information about.\n",
        "tags": [
          "audits"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "name": "audit_name",
            "in": "query",
            "description": "Regex to search against for audits.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "audit_priority",
            "in": "query",
            "description": "Regex describing what audit priorities should be returned.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "audit_description",
            "in": "query",
            "description": "Looking for your string in the audit short description.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "audit_long_description",
            "in": "query",
            "description": "Looking for your string in the audit long description.\n",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/adduser/": {
      "x-cached-length": "Every Midnight",
      "get": {
        "description": "Designed to grab a list of hosts that either pass or fail an audit\nalong with the relevant data about each host. Similar to the audit_table\nitem from the old api.\n",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "auth"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "Username that wants to be created. Must be Lowercase and  All Letters\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "purpose",
            "in": "query",
            "description": "Reason that user was created. Requires a ticket denoted in brackets. Like [TKT-101]\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ]
      }
    },
    "/ip/search/": {
      "x-cached-length": "Every Midnight",
      "get": {
        "description": "Get the host(s) associated with this particular IP address\n",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "IP"
        ],
        "parameters": [
          {
            "name": "ip",
            "in": "query",
            "description": "The ipv4 or ipv6 address that you wish to search for records against.\n",
            "schema": {
              "type": "string",
              "format": "ipv46"
            }
          },
          {
            "name": "subnet",
            "in": "query",
            "description": "The ipv4 or ipv6 range of addresses that you wish to search against.\nthis can be combined with ip but it's not reccomended as only the ip\nwill match and only if it's in this range.\n",
            "schema": {
              "type": "string",
              "format": "subnet46"
            }
          },
          {
            "name": "iptype",
            "in": "query",
            "description": "Look for only one of the ips of this type. Must be vips4, vips6, host4,\nhost6, drac4, drac6, netdev4, netdev6 or unknown.\n",
            "schema": {
              "type": "string",
              "enum": [
                "vips4",
                "vips6",
                "host4",
                "host6",
                "drac4",
                "drac6",
                "netdev4",
                "netdev6",
                "unknown"
              ]
            },
            "required": false
          },
          {
            "name": "hostid",
            "in": "query",
            "description": "hostid to search for\n",
            "schema": {
              "type": "int"
            }
          },
          {
            "name": "hostname",
            "in": "query",
            "description": "A regex to match for the hostname. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the hostname column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "A regex to match for the status. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pop",
            "in": "query",
            "description": "A regex to match for the pop. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "srvtype",
            "in": "query",
            "description": "A regex to match for the srvtype. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type\nregular expressions are accepted. Matched on the status column in the host table. With exact\nwill match exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource",
            "in": "query",
            "description": "Matches the MOWN Resource either via Regex or Exactly (with exact). Keep in mind resources include\nthe resource qualifier and resource subtype if applicable.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partition",
            "in": "query",
            "description": "Matches the MOWN Parition either via Regex or Exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service",
            "in": "query",
            "description": "Matches the MOWN Service either via Regex or Exactly.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountid",
            "in": "query",
            "description": "Matches the MOWN Account ID either via Regex or Exactly\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mownbase",
            "in": "query",
            "description": "Matches the MOWN Base URI fully (with regex or Exactly). Does not include\na matching of arguments\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mownfull",
            "in": "query",
            "description": "Matches the MOWN full URI fully (with regex or Exactly). Includes a Matching of Arguments\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagged",
            "in": "query",
            "description": "Matches an individual tag. Returns true if the tag is defined (even if the tag is set to something\nlike false). Specify using JQ style formatting. Uses the [JSON_EXISTS](https://mariadb.com/kb/en/json_exists/)\nfunctionality to do the JSON mapping. So **if you're looking for tag `loveit` you'd want to speicfy `$.loveit`**.\n",
            "required": false,
            "schema": {
              "type": "string"
            },
            "format": "jsonpath",
            "pattern": "^\\$\\."
          },
          {
            "name": "taggedtrue",
            "in": "query",
            "description": "Matches an individual tag. Returns true if the tag is defined as true Uses the \n[JSON_EXTRACT](https://mariadb.com/kb/en/json_extract/)\nfunctionality to do the JSON mapping. So **if you're looking for tag `loveit` you'd want to speicfy `$.loveit`**.\nWill match against [true](https://mariadb.com/kb/en/true-false/), a builtin boolean. So if you specify something\nlike `{\"loveit\" : \"false\"}` (Note the String not boolean) it will return true and if you have something like\n`{\"zerosareawesome\" : 0}` it should return false.\n",
            "required": false,
            "schema": {
              "type": "string"
            },
            "format": "jsonpath",
            "pattern": "^\\$\\.\""
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Controls your other filters and flips them from regex matches (default) to exact matches\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                true,
                false
              ]
            }
          }
        ]
      }
    }
  }
}