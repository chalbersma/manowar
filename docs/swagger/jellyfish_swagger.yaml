---
openapi: 3.0.0
info:
  title: Jellyfish 2 API
  description: |
    Jellyfish 2 API. Designed to be a progrmattic way to interact with the data
    collected and analyzed by Jellyfish 2.
  version: "2.0"
servers:
  - url: https://manowar.yourfqdn.tld/manowar/v2
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
security:
  - basicAuth: []
paths:

    
  /custdashboard/modify/{dash_id}/ :
    x-cached-length: "Every Midnight"
    get:
      description: |
        Modifies a custom audit by either adding, removing or setting an audit_id
        or list of audit_ids
      responses:
        200:
          description: OK
      parameters:
        - name: dash_id
          x-astliteraleval: true
          in: path
          description: |
            Dashboard ID of the dashboard you wish to modify
          schema:
            type: string
          required: true
        - name: modifyorder
          x-astliteraleval: true
          in: query
          description: |
            A dict that tells the system what it should do. Contains one or two keys,
            "add" with an audit_id or list of audit_id's to be added and/or "remove"
            with an audit_id or list of audit_ids to be removed. This is a parsed
            by ast.literal_eval.
          schema:
            type: string
          required: true


    
  /collected/types/ :
    x-cached-length: "Every Midnight"
    get:
      description: |
        Grabs a list of types available in our collections. This is a slower query, so
        results are cached once at midnight. If you query times out it will finish up
        the query & caching on the server and then serve it to you next time you ask.
      responses:
        200:
          description: OK


    
  /genericlargecompare/ :
    x-cached-length: "Every Midnight"
    get:
      description: |
        Generic Large Commparison against a particular hoststatus.
      responses:
        200:
          description: OK
      parameters:
        - name: hostname
          in: query
          description: |
            The regex the hostname you wish to get data for.
          schema:
            type: integer
          required: false
        - name: exact
          in: query
          description: |
            Boolean use exact matches instead of regex
          schema:
            type: string
          required: false
        - name: pop
          in: query
          description: |
            Pop you wish to search for, respects exact
          schema:
            type: string
          required: false
        - name: srvtype
          in: query
          description: |
            Srvtype you wish to search for, respects exact
          schema:
            type: string
          required: false
        - name: hoststatus
          in: query
          description: |
            Hoststatus you wish to search for, respects exact
          schema:
            type: string
          required: false
        - name: status
          in: query
          description: |
            Overrides hoststatus.
          schema:
            type: string
          required: false
        - name: matchcollection_pop
          in: query
          description: |
            Uses hoststatu's matchcollection feature to match a collection
          schema:
            type: string
          required: false
        - name: matchcollection_ctype
          in: query
          description: |
            Uses hostsearch ctype match
          schema:
            type: string
          required: false
        - name: matchcollection_csubtype
          in: query
          description: |
            Uses hostsearch csubtype match
          schema:
            type: string
          required: false
        - name: matchcollection_cvalue
          in: query
          description: |
            Uses hostsearch cvalue match
          schema:
            type: string
          required: false
        - name: mtype
          in: query
          description: |
            What type of match you should do. Can be any of the non subtype comparisons
            noted in the docs.
          schema:
            type: string
          required: false
        - name: ctype
          in: query
          description: |
            What collection type of match you should do your match against. Put this
            in as an array or I'll get angry at ya.
          schema:
            type: array
          required: false
        - name: csubtype
          in: query
          description: |
            What collection sub type of match you should do your match against. Put this
            in as an array or I'll get angry at ya.
          schema:
            type: array
          required: false
        - name: mvalue
          in: query
          description: |
              What collection value shoudl I match against. THis is an array.
          schema:
            type: array
          required: false



    
  /sapi/listusers/ :
    x-cached-length: "Every Midnight"
    get:
      description: |
        Designed to grab a list of hosts that either pass or fail an audit
        along with the relevant data about each host. Similar to the audit_table
        item from the old api.
      responses:
        200:
          description: OK


    
  /srvtypelist/ :
    x-cached-length: "Every Midnight"
    get:
      description: |
        Gives a list of srvtypes found in the environment
      responses:
        200:
          description: OK
      parameters:
        - name: srvtype_name
          in: query
          description: |
              Regex to search against for the pops.
          schema:
            type: string
        - name: with_pop
          in: query
          description: |
              Only with Pops that meet this criteria.
          schema:
            type: string
        - name: with_hostname
          in: query
          description: |
              Only with Hostnames that meet this criteria.
          schema:
            type: string
        - name: with_status
          in: query
          description: |
              Only with Status that meet this criteria.
          schema:
            type: string
        - name: exact
          in: query
          description: |
              Don't Use Regexs, instead use exact matching.
          schema:
            type: string




    
  /poplist/ :
    x-cached-length: "Every Midnight"
    get:
      description: |
        Gives you all the pops that Jellyfish has recently seen.
      responses:
        200:
          description: OK
      parameters:
        - name: pop_name
          in: query
          description: |
              Regex to search against for the pops.
          schema:
            type: string
        - name: with_srvtype
          in: query
          description: |
              Only with Srvtypes that meet this criteria.
          schema:
            type: string
        - name: with_hostname
          in: query
          description: |
              Only with Hostnames that meet this criteria.
          schema:
            type: string
        - name: with_status
          in: query
          description: |
              Only with Statuss that meet this criteria.
          schema:
            type: string
        - name: exact
          in: query
          description: |
              Don't Use Regexs, instead use exact matching.
          schema:
            type: string


    
  /auditinfo/{audit_id}/ :
    get:
      description: |
        Get's the stored information about a given audit. Does not include the Bucket or Match Logic
        as there is currently a bug about those items.
      responses:
        200:
          description: OK
      parameters:
        - name: audit_id
          in: path
          description: |
            The id of the audit you wish to see. You need to either specify it in path or optionally 
            in the query string. This parameter is not technically required. There is not good way to document
            this in swagger.
          required: true
          schema:
            type: integer


    
  /custdashboard/list/ :
    x-cached-length: "Every Midnight"
    get:
      description: |
        Produces a list of custom dashboards available to query.
      responses:
        200:
          description: OK
      parameters:
        - name: dash_id
          in: query
          description: |
              The Dashbaord identifier you would like to reference. Can be either
              the dashboard short name (does regex search) or the dashboard id number
              (does exact match).
          schema:
            type: string
          required: false


    
  /cve/canoncial/{cve_name}/ :
    get:
      description: |
        Gives you all the pops that Jellyfish has recently seen.
      responses:
        200:
          description: OK
      parameters:
        - name: cve_name
          in: path
          description: |
              The CVE you wish to recieve data against
          schema:
            type: string
          required: true


    
  /ip/search/ :
    x-cached-length: "Every Midnight"
    get:
      description: |
        Get the host(s) associated with this particular IP address
      responses:
        200:
          description: OK
      parameters:
        - name: ip
          in: query
          description: |
              The ipv4 or ipv6 address that you wish to search for records against.
          schema:
            type: string
        - name: subnet
          in: query
          description: |
              The ipv4 or ipv6 range of addresses that you wish to search against.
              this can be combined with ip but it's not reccomended as only the ip
              will match and only if it's in this range.
          schema:
            type: string
        - name: hostname
          in: query
          description: |
            The hostname you wish to search for. Is an exact match.
          schema:
            type: string
        - name: pop
          in: query
          description: |
            The pop you wish to search for. Is an exact match.
          schema:
            type: string
        - name: srvtype
          in: query
          description: |
            The srvtype you wish to search for. Is an exact match.
          schema:
            type: string
        - name: iptype
          in: query
          description: |
              Look for only one of the ips of this type.
          schema:
            type: string



    
  /auditresults/{audit_id}/ :
    x-cached-length: "Every Midnight"
    get:
      description: |
        Designed to grab a list of hosts that either pass or fail an audit
        along with the relevant data about each host. Similar to the audit_table
        item from the old api.
      responses:
        200:
          description: OK
      parameters:
        - name: audit_id
          in: path
          description: |
            The id of the audit you wish to get hosts back for. Needs to be speicied here or
            in the query string. This parameter is not technically required.
          schema:
            type: integer
          required: true
        - name: hostname
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the hostname. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the hostname column in the host table.
          schema:
            type: string
          required: false
        - name: pop
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the pop name. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the pop column in the host table.
          schema:
            type: string
          required: false
        - name: srvtype
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the srvtype name. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the srvtype column in the host table.
          schema:
            type: string
          required: false
        - name: bucket
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the bucket name. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the bucket column in the audits_by_host table.
          schema:
            type: string
          required: false
        - name: auditResult
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the audit result.. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the audit_result column in the audits_by_host table.
            Audit result is stored as an enum so best values are "pass", "fail" or "notafflicted".
          schema:
            type: string
          required: false
        - name: auditResultText
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the Audit Result text (generally the failing version).
            [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the audit_result_text column in the audits_by_host table.
          schema:
            type: string
          required: false
        - name: status
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the value. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the hoststatus column in the hosts table.
          schema:
            type: string
          required: false


    
  /collected/subtypes_filtered/{ctype}/ :
    x-cached-length: "Every Midnight"
    get:
     description: |
       Grabs a list of subtypes associated with a particular type. As this query can be intesive,
       results are cached once a midnight. Please be patient with this query.
     responses:
       200:
         description: OK
     parameters:
      - name: ctype
        in: path
        description: |
          The Collection Type you wish to match against. Must be equal to this item. You can get
          a list of collection types from the `/collection/type` endpoint. Can be overridden with
          query string paramter.
        required: true
        schema:
          type: string
        x-astliteraleval: true
      - name: csubtype
        in: query
        description: |
          The Collection Subtype you wish to match against. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
          regular expressions are accepted. Matched on the collection_subtype column in the collection table.
        schema:
          type: string
        required: false
      - name: usevalue
        schema:
          type: string
        in: query
        description: |
          Setting this value to anything will tell the api endpoint to not just organize subtypes but
          to also organize unique values too.
      - name: hostname
        x-astliteraleval: true
        in: query
        description: |
          A regex to match for the hostname. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
          regular expressions are accepted. Matched on the hostname column in the host table.
        schema:
          type: string
        required: false
      - name: pop
        x-astliteraleval: true
        in: query
        description: |
          A regex to match for the pop name. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
          regular expressions are accepted. Matched on the pop column in the host table.
        schema:
          type: string
        required: false
      - name: srvtype
        x-astliteraleval: true
        in: query
        description: |
          A regex to match for the srvtype name. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
          regular expressions are accepted. Matched on the srvtype column in the host table.
        schema:
          type: string
        required: false
      - name: value
        x-astliteraleval: true
        in: query
        description: |
          A regex to match for the value. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
          regular expressions are accepted. Matched on the collected_value column in the collections table.
        schema:
          type: string
        required: false
      - name: status
        x-astliteraleval: true
        in: query
        description: |
          A regex to match for the value. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
          regular expressions are accepted. Matched on the hoststatus column in the hosts table.
        schema:
          type: string
        required: false


    
  /hostsearch/ :
    x-cached-length: "Every Midnight"
    get:
      description: |
        Designed to grab the host(s) that match a particular hostname. Ideally
        to be used by the SAPI endpoint to extend host collections of a particular
        host (by searching for it in Jellyfish, then extending the collections
        with new data).
      responses:
        200:
          description: OK
      parameters:
        - name: hostname
          in: query
          description: |
            The regex the hostname you wish to get data for.
          schema:
            type: string
          required: false
        - name: exact
          in: query
          description: | 
            Boolean use exact matches instead of regex
          schema:
            type: string
          required: false
        - name: pop
          in: query
          description: |
            Pop you wish to search for, respects exact
          schema:
            type: string
          required: false
        - name: srvtype
          in: query
          description: |
            Srvtype you wish to search for, respects exact
          schema:
            type: string
          required: false
        - name: hoststatus
          in: query
          description: |
            Hoststatus you wish to search for, respects exact
          schema:
            type: string
          required: false
        - name: status
          in: query
          description: |
            Overrides hoststatus.
          schema:
            type: string
          required: false
        - name: matchcollection
          in: query
          description: |
            Allow the match of one item joined from the collection table. Default
            is off but if it's on you'll need to provide a collection match object.
          required: false
          schema:
            type: string
        - name: ctype
          in: query
          description: |
            If using matchcollection this is the collection type to match against.
            This is always an exact match.
          required: false
          schema:
            type: string
        - name: csubtype
          in: query
          description: |
            If using matchcollection this is the collection subtype to match against.
            This is always an exact match.
          required: false
          schema:
            type: string
        - name: cvalue
          in: query
          description: |
            If using matchcollection this is the collection value to match against.
            This is always an exact match.
          required: false
          schema:
            type: string


    
  /cve/canoncial_check/{cve_name}/ :
    x-cached-length: "Every Midnight"
    get:
      description: |
        Gives you a check against a particular cve for the population you specify
        in the arguments. Accepts the non collection paramaters (as this utilizes
        the collection paramaters) to make the check.
      responses:
        200:
          description: OK
      parameters:
        - name: cve_name
          in: path
          description: |
              The CVE you wish to recieve data against
          schema:
            type: string
          required: true
        - name: hostname
          in: query
          description: |
            The regex the hostname you wish to get data for.
          schema:
            type: integer
          required: false
        - name: exact
          in: query
          description: |
            Boolean use exact matches instead of regex
          schema:
            type: string
          required: false
        - name: pop
          in: query
          description: |
            Pop you wish to search for, respects exact
          schema:
            type: string
          required: false
        - name: srvtype
          in: query
          description: |
            Srvtype you wish to search for, respects exact
          schema:
            type: string
          required: false
        - name: hoststatus
          in: query
          description: |
            Hoststatus you wish to search for, respects exact
          schema:
            type: string
          required: false
        - name: status
          in: query
          description: |
            Overrides hoststatus.
          schema:
            type: string
          required: false


    
  /ip/report/ :
    x-cached-length: "Every Midnight"
    get:
      description: |
        Reports an ip/host intelligence for future querying. There's an undocumented
        feature that allows you to post a series of ip addresses into this
      responses:
        200:
          description: OK
      parameters:
        - name: ip
          in: query
          description: |
              The ipv4 or ipv6 address that you wish to record a record against.
          schema:
            type: string
          required: true
        - name: iptype
          in: query
          description: |
              Look for only one of the ips of this type. Must be vips4, vips6, host4,
              host6, drac4, drac6, netdev4, netdev6 or unknown.
          schema:
            type: string
          required: true
        - name: hostname
          in: query
          description: |
              Hostname to associate this host with. You need either this or a host
              id to be a valid report.
          schema:
            type: string



    
  /auditresults/{audit_id}/{timestamp}/ :
    x-cached-length: "Every Midnight"
    get:
      description: |
        Designed to grab a list of hosts that either pass or fail an audit
        along with the relevant data about each host. Similar to the auditresults
        endpoint, except that this one also takes a timestamp so that it can
        return the results as it appears at a particular time.
      responses:
        200:
          description: OK
      parameters:
        - name: audit_id
          in: path
          description: |
            The id of the audit you wish to get hosts back for. Needs to be speicied here or
            in the query string. This parameter is not technically required.
          schema:
            type: integer
          required: true
        - name: timestamp
          in: path
          description: |
            A Unix Timestamp that you want to check for the date against. 
            Must be a positive integer. This variable is required. If you 
            wish to get the "latest" you shoul utilize the /auditresults
            endpoint.
          schema:
            type: integer
          required: true
        - name: hostname
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the hostname. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the hostname column in the host table.
          schema:
            type: string
          required: false
        - name: pop
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the pop name. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the pop column in the host table.
          schema:
            type: string
          required: false
        - name: srvtype
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the srvtype name. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the srvtype column in the host table.
          schema:
            type: string
          required: false
        - name: bucket
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the bucket name. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the bucket column in the audits_by_host table.
          schema:
            type: string
          required: false
        - name: auditResult
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the audit result.. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the audit_result column in the audits_by_host table.
            Audit result is stored as an enum so best values are "pass", "fail" or "notafflicted".
          schema:
            type: string
          required: false
        - name: auditResultText
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the Audit Result text (generally the failing version).
            [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the audit_result_text column in the audits_by_host table.
          schema:
            type: string
          required: false
        - name: status
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the value. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the hoststatus column in the hosts table.
          schema:
            type: string
          required: false


    
  /auditlist/ :
    x-cached-length: "Every Midnight"
    get:
      description: |
        Get the Dashboard information about.
      responses:
        200:
          description: OK
      parameters:
        - name: audit_name
          in: query
          description: |
              Regex to search against for audits.
          schema:
            type: string
        - name: audit_priority
          in: query
          description: |
              Regex describing what audit priorities should be returned.
          schema:
            type: string
        - name: audit_description
          in: query
          description: |
              Looking for your string in the audit short description.
          schema:
            type: string
        - name: audit_long_description
          in: query
          description: |
              Looking for your string in the audit long description.
          schema:
            type: string



    
  /collected/ :
    get:
      description: |
        Root for the collected endpoint. Describes it's child for data discovery.
      responses:
        200:
         description: OK


    
  /collected/subtypes/{ctype}/ :
    x-cached-length: "Every Midnight"
    get:
     description: |
       Grabs a list of subtypes associated with a particular type. As this query can be intesive,
       results are cached once a midnight. Please be patient with this query.
     responses:
       200:
         description: OK
     parameters:
       - name: ctype
         in: path
         description: | 
           The Collection Type you wish to match against. Must be equal to this item. You can get
           a list of collection types from the `/collection/type` endpoint. Can be overridden with
           query string paramter.
         required: true
         schema:
           type: string


    
  /hostcollections/{host_id}/ :
    x-cached-length: "Every Midnight"
    get:
      description: |
        Designed to grab the latest collections from the host. Grabs the fresh
        ones as of yesterday Midnight. Only grabs one collection for each type/subtype
      responses:
        200:
          description: OK
      parameters:
        - name: host_id
          in: path
          description: |
            The id of the host you wish to get data for.
          schema:
            type: integer
          required: true
        - name: collection_type
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the collection_type. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the hostname column in the collection table.
          schema:
            type: string
          required: false
        - name: collection_subtype
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the collection_subtype name. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the collection_subtype column in the collection table.
          schema:
            type: string
          required: false


    
  /soc/vipporttohost/ :
    x-cached-length: "Every Midnight"
    get:
     description: |
       Grabs a list of hosts that are beind the given vip with the proper
       port/protocol open.
     responses:
       200:
         description: OK
     parameters:
      - name: vip
        in: query
        description: |
          The VIP that you wish to search hosts against.
        required: true
        schema:
          type: string
        x-astliteraleval: true
      - name: port
        in: query
        description: |
          The port number that you wish to search against.
        schema:
          type: integer
        required: true
      - name: protocol
        schema:
          type: string
        in: query
        description: |
          This is a string that will accept `tcp` or `udp` (default is tcp)
          and use it in conjunction with the ports.
        required: false
      - name: ipv
        x-astliteraleval: true
        in: query
        description: |
          By default this will be `4` (as in ipv4). But you can set it to 
          `6` which will allow you to look for ipv6 ports and protocols on
          ipv6 vips.
        schema:
          type: string
        required: false


    
  /custdashboard/dashboard/{dash_id}/ :
    x-cached-length: "Never"
    get:
      description: |
        Produces a the Audits inside of a custom dashboard.
      responses:
        200:
          description: OK
      parameters:
        - name: dash_id
          in: path
          description: |
              The Dashbaord identifier you would like to reference. Can be either
              the dashboard short name or the dashboard id number
          schema:
            type: string
          required: true


    
  /auditinfo/{audit_id}/buckets/ :
    get:
      description: |
        Get's the bucket information for a particular audit. Does not retrieve
        The data from the database because of limitations. Instead retrieves it
        from "on disk." This means that what is returned here may not be as 
        accurate as it could be.
      responses:
        200:
          description: OK
      parameters:
        - name: audit_id
          in: path
          description: |
            The id of the audit's buckets you desire. You need to either specify it in path or optionally 
            in the query string.
          schema:
            type: integer
          required: true


    
  /sapi/addtoken/ :
    x-cached-length: "Every Midnight"
    get:
      description: |
        Adds a new token for a particular user.
      responses:
        200:
          description: OK
      parameters:
        - name: user
          x-astliteraleval: true
          in: query
          description: |
            Username or UserID of user who should have token created.
          schema:
            type: string
          required: true
        - name: validfor
          x-astliteraleval: true
          in: query
          description: |
            How many days token should be valid for (default 7 days)
          schema:
            type: string
          required: false
        - name: tokentype
          x-astliteraleval: true
          in: query
          description: |
            What type of token to insert. Default is sapi.
          schema:
            type: string
          required: false


    
  /custdashboard/create/ :
    x-cached-length: "Every Midnight"
    get:
      description: |
        Creates a New Jellyfish2 Custom Audit.
      responses:
        200:
          description: OK
      parameters:
        - name: username
          x-astliteraleval: true
          in: query
          description: |
            Username that wants to be created.
          schema:
            type: string
          required: true
        - name: purpose
          x-astliteraleval: true
          in: query
          description: |
            Reason that user was created. Requires a ticket denoted in brackets.
          schema:
            type: string
          required: true


    
  /getconfig/ :
    get:
      description: |
        Get's the ini file used in collections from the host.
      responses:
        200:
          description: OK


    
  /sapi/puthostjson/ :
    post:
      description: |
        Accepts a valid host json and stores it in the api. This call is fenced
        by an api token that you need to specify and won't work in the interactive
        version of this.
      responses:
        200:
          description: OK
        401:
          description: Unauthorized (Most likely no Token given)
      requestBody:
        content:
          application/json:
            required: true
            schema:
              type: object


    
  /dashboard/ :
    x-cached-length: "Every Midnight"
    get:
      description: |
        Get the Dashboard information about.
      responses:
        200:
          description: OK
      parameters:
        - name: pass_audits
          in: query
          description: | 
            Specifying this variable means you only want the passing audits 
            (audits with zero failures).
            Note that specifying this option simultaneously with fail_audits
            will lead to a warning but will return all audits.
          schema:
            type: string
        - name: fail_audits
          in: query
          description: | 
            Specifying this variable means you only want the failing audits 
            (audits with zero failures).
            Note that specifying this option simultaneously with pass_audits
            will lead to a warning but will return all audits.
          schema:
            type: string
        - name: cust_dash_id
          in: query
          description: |
            Only Return audits in this custom dashboard (referenced by ID).
          schema:
            type: number



    
  /collected/values/{ctype}/{csubtype}/ : 
    x-cached-length: "Every Midnight"
    get:
      description: |
        Grabs information on host collections as it exists on the edge (according
        to our latest collected data). This query can be intensive so it is cached
        daily.
      responses:
        200:
          description: OK
      parameters:
        - name: ctype
          in: path
          description: |
            The Collection Type you wish to match against. Must be equal to this item.
            You can get a list of collection types from the `/collection/type/` endpoint.
            Can be overrriden by query string parameter.
          schema:
            type: string
          required: true
        - name: csubtype
          in: path
          description: |
             The Collection Subtype you wish to match against. Must be equal to this item.
             You can get a list of collection subtypes for a particular type from the
             `/collection/subtype/$ctype` endpoint. Can be overrdiden by query string parameter.
          schema:
            type: string
          required: true
        - name: hostname
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the hostname. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the hostname column in the host table.
          schema:
            type: string
          required: false
        - name: pop
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the pop name. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the pop column in the host table.
          schema:
            type: string
          required: false
        - name: srvtype
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the srvtype name. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the srvtype column in the host table.
          schema:
            type: string
          required: false
        - name: value
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the value. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the collected_value column in the collections table.
          schema:
            type: string
          required: false
        - name: status
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the value. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the hoststatus column in the hosts table.
          schema:
            type: string
          required: false
        - name: exact
          x-astliteraleval: true
          in: query
          description: |
            Essentially make everything above change from a regex to an exact match instead.
          schema:
            type: string
          required: false


    
  /root/ :                                              
    x-cached-length: "Every Midnight"                  
    get:                                               
      description: |
        Get Information about All Jellyfish2 Endpoints
      responses:
        200:
          description: OK


    
  /auditresults/{audit_id}/range/{backdays}/ :
    x-cached-length: "Every Midnight"
    get:
      description: |
        Designed to grab a list of hosts that either pass or fail an audit
        along with the relevant data about each host. Similar to the auditresults
        endpoint, except that this one also takes a timestamp so that it can
        return the results as it appears at a particular time.
      responses:
        200:
          description: OK
      parameters:
        - name: audit_id
          in: path
          description: |
            The id of the audit you wish to get hosts back for. Needs to be speicied here or
            in the query string. This parameter is not technically required.
          schema:
            type: integer
          required: true
        - name: backdays
          in: path
          description: |
            How many days back to look. This will use the last Midnight time and go back from
            there.
          schema:
            type: integer
          required: true
        - name: hostname
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the hostname. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the hostname column in the host table.
          schema:
            type: string
          required: false
        - name: pop
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the pop name. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the pop column in the host table.
          schema:
            type: string
          required: false
        - name: srvtype
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the srvtype name. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the srvtype column in the host table.
          schema:
            type: string
          required: false
        - name: bucket
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the bucket name. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the bucket column in the audits_by_host table.
          schema:
            type: string
          required: false
        - name: auditResult
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the audit result.. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the audit_result column in the audits_by_host table.
            Audit result is stored as an enum so best values are "pass", "fail" or "notafflicted".
          schema:
            type: string
          required: false
        - name: auditResultText
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the Audit Result text (generally the failing version).
            [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the audit_result_text column in the audits_by_host table.
          schema:
            type: string
          required: false
        - name: status
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the value. [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the hoststatus column in the hosts table.
          schema:
            type: string
          required: false


    
  /sapi/adduser/ :
    x-cached-length: "Every Midnight"
    get:
      description: |
        Designed to grab a list of hosts that either pass or fail an audit
        along with the relevant data about each host. Similar to the audit_table
        item from the old api.
      responses:
        200:
          description: OK
      parameters:
        - name: username
          x-astliteraleval: true
          in: query
          description: |
            Username that wants to be created.
          schema:
            type: string
          required: true
        - name: purpose
          x-astliteraleval: true
          in: query
          description: |
            Reason that user was created. Requires a ticket denoted in brackets.
          schema:
            type: string
          required: true


    
  /collated/{collatedType}/ :
    get:
      description: |
        Returns data that get's collated in the collate module. Can get results deliminated by audit for audits
        ( yes you can get audits by audit ), pops & srvtypes.
      responses:
        200:
          description: OK
      parameters:
        - name: collatedType
          in: path
          description: |
            The type of collated value that you wish to see. Initially can only be pop,
            srvtype or acoll (For audit). In the future may include more collations if
            additional collations are added.
          schema:
            type: string
          required: true
        - name: typefilter
          x-astliteraleval: true
          in: query
          description: |
            A regex to match for the collated type (pop, srvtype or audit). [PCRE](https://mariadb.com/kb/en/mariadb/regexp/) type
            regular expressions are accepted. Matched on the $collatedType column of the table in question. Should be encased in
            parenthesis as it's evaluated by [ast.literal_eval](https://docs.python.org/3.6/library/ast.html) on the backend as
            part of it's sanitization.
          schema:
            type: string
          required: false
        - name: auditID
          x-astliteraleval: true
          in: query
          description: |
            An audit ID to check against. Will filter results to just the auditID that you're interested in. For example, specifying 
            7 with a collatedType of "pop" will lead to all of the pops returning their pass/fail/exempt amounts for auditID #7.
          schema:
            type: string
          required: false


    
  /sapi/extendpopulationjson/ :
    post:
      description: |
        Accepts a valid extenstion json and stores it for the host or population
        of hosts specified. This call is fenced by an api token that you need to
        specify and won't work in the interactive version of this. Population is
        defined by hostsearch.
      responses:
        200:
          description: OK
        401:
          description: Unauthorized (Most likely no Token given)
      requestBody:
        content:
          application/json:
            required: true
            schema:
              type: object
      parameters:
        - name: hostname
          in: query
          description: |
            hostname or hostname regex that should be specified.
          schema:
            type: string
        - name: exact
          in: query
          description: |
            Wether to match all the population itesm exactly or to do so
            with a regex. By default is regex use "True" to do exact.
          schema:
            type: string
        - name: pop
          in: query
          description: |
            Which pop to match against can be regex or exact
          schema:
            type: string
        - name: hoststatus
          description: |
            Which status to search against. Can be exact or regex based
            on exact value.
          schema:
            type: string


